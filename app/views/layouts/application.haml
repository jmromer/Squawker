!!!
%html
  %head
    %title= full_title(yield(:title))
    = stylesheet_link_tag "application", |
                          media: "all",  |
                          "data-turbolinks-track" => true

    = javascript_include_tag  "application", |
                              "data-turbolinks-track" => true
    = csrf_meta_tags
    = render "layouts/shim"

  %body
    = render "layouts/header"

    .container
      - flash.each do |key, value|
        = content_tag(:div, value, class: "alert alert-#{key}")
      = yield
      = render "layouts/footer"

    :javascript
      var nextPage = 1

      let displayResults = (e) => {
        let httpRequest = e.target
        if (httpRequest.readyState !== XMLHttpRequest.DONE) { return }

        if (httpRequest.status !== 200) {
          return console.error(`Could not fetch: ${httpRequest.responseText}`)
        }

        // new <li>s
        let newItems = httpRequest.responseText

        if (newItems === "") {
          return console.info(`No more left! Did not increment nextPage to ${nextPage}`)
        }

        let squawkList = document.getElementsByClassName("squawks")[0]
        let newList = document.createElement("ul")
        let parentNode = squawkList.parentNode

        newList.className = "squawks"
        newList.innerHTML = squawkList.innerHTML + newItems

        parentNode.replaceChild(newList, squawkList)
        nextPage = nextPage + 1
        console.info(`Success. Incremented nextPage to ${nextPage}`)
      }

      // Send xhr request for activity feed
      let requestSquawks = (page) => {
        console.info(`Requesting page ${page}`)
        var httpRequest = new XMLHttpRequest()
        httpRequest.onreadystatechange = displayResults
        httpRequest.open("GET", `/activity_feed/index?page=${page}`)
        httpRequest.send()
      }

      // request the first page of squawks
      requestSquawks(nextPage)

      // On scroll, request next page if at bottom (plus offset)
      // TODO: What if there's not enough screen to scroll?
      window.document.addEventListener("scroll", function(e) {
        let documentHeight = window.document.body.clientHeight
        let viewportHeight = window.innerHeight
        let maxScrollableHeight = documentHeight - viewportHeight
        let offSet = 100
        let didScrollToBottom = window.scrollY > (maxScrollableHeight - offSet)

        if (didScrollToBottom) {
          requestSquawks(nextPage)
        }
      })
